version: '3'

services:
  web:
    restart: always
    build: ./web
    expose:
      - "8000"
    links:
      - mongodb:mongodb
    volumes:
      - web-data:/usr/src/app/static
    env_file:
      - .env
    command: /usr/local/bin/gunicorn --access-logfile - --error-logfile - --log-level debug -w 2 -b :8000 app:app
    #command: flask run --host=0.0.0.0 --port=8000

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - .:/www/static
      - web-data:/usr/src/app/static
    links:
      - web:web

  mongodb:
    image: mongo:4.0.8
    restart: unless-stopped
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      MONGO_INITDB_ROOT_PASSWORD: mdb_user
      MONGO_INITDB_DATABASE: edgedb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017:27017"
#    networks:
#      - backend

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: 'bitnami/kafka:latest'
    environment:
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "CLIENT://:9092,EXTERNAL://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://kafka:9092,EXTERNAL://localhost:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: "CLIENT"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - '9092:9092'
      - '9093:9093'
    depends_on:
      - zookeeper

  spark:
    build:
       context: ./spark/
       dockerfile: Dockerfile
#    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
    volumes:
      - ./spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./jars_dir:/opt/bitnami/spark/ivy:z

#  spark-worker-1:
#    build:
#       context: ./spark/
#    image: docker.io/bitnami/spark:3-debian-10
#    environment:
#      - SPARK_MODE=worker
#      - SPARK_MASTER_URL=spark://spark:7077
#      - SPARK_WORKER_MEMORY=1G
#      - SPARK_WORKER_CORES=1
#      - SPARK_RPC_AUTHENTICATION_ENABLED=no
#      - SPARK_RPC_ENCRYPTION_ENABLED=no
#      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#      - SPARK_SSL_ENABLED=no
#    volumes:
#      - ./spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
#      - ./jars_dir:/opt/bitnami/spark/ivy:z

#  spark-worker-2:
#    build:
##       context: ./spark/
#    image: docker.io/bitnami/spark:3-debian-10
#    environment:
#      - SPARK_MODE=worker
#      - SPARK_MASTER_URL=spark://spark:7077
#      - SPARK_WORKER_MEMORY=1G
#      - SPARK_WORKER_CORES=1
#      - SPARK_RPC_AUTHENTICATION_ENABLED=no
#      - SPARK_RPC_ENCRYPTION_ENABLED=no
#      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
#      - SPARK_SSL_ENABLED=no
#    volumes:
#      - ./spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
#      - ./jars_dir:/opt/bitnami/spark/ivy:z

volumes:
  web-data:
  mongodbdata:
